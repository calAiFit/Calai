/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/intake-history/route";
exports.ids = ["app/api/intake-history/route"];
exports.modules = {

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0,\n    errorFormat: \"pretty\"\n});\nif (true) globalForPrisma.prisma = prisma;\nconst db = {\n    async getProfileByUserId (userId) {\n        return prisma.profile.findUnique({\n            where: {\n                userId\n            }\n        });\n    },\n    async upsertProfile (userId, data) {\n        return prisma.profile.upsert({\n            where: {\n                userId\n            },\n            update: data,\n            create: {\n                userId,\n                name: data.name,\n                avatarUrl: data.avatarUrl,\n                ...data.age && {\n                    age: data.age\n                },\n                ...data.gender && {\n                    gender: data.gender\n                },\n                ...data.height && {\n                    height: data.height\n                },\n                ...data.weight && {\n                    weight: data.weight\n                },\n                ...data.targetWeight && {\n                    targetWeight: data.targetWeight\n                },\n                ...data.activityLevel && {\n                    activityLevel: data.activityLevel\n                }\n            }\n        });\n    },\n    async getDailyGoal (userId, date) {\n        return prisma.dailyGoal.findUnique({\n            where: {\n                userId_date: {\n                    userId,\n                    date: new Date(date.toDateString())\n                }\n            }\n        });\n    },\n    async upsertDailyGoal (userId, date, data) {\n        return prisma.dailyGoal.upsert({\n            where: {\n                userId_date: {\n                    userId,\n                    date: new Date(date.toDateString())\n                }\n            },\n            update: data,\n            create: {\n                userId,\n                date: new Date(date.toDateString()),\n                ...data\n            }\n        });\n    },\n    async addIntakeHistory (userId, data) {\n        const intakeRecord = await prisma.dailyIntakeHistory.create({\n            data: {\n                userId,\n                date: new Date(),\n                ...data\n            }\n        });\n        await this.updateDailySummary(userId);\n        return intakeRecord;\n    },\n    async getIntakeHistory (userId, date) {\n        const targetDate = date || new Date();\n        return prisma.dailyIntakeHistory.findMany({\n            where: {\n                userId,\n                date: {\n                    gte: new Date(targetDate.toDateString()),\n                    lt: new Date(new Date(targetDate).setDate(targetDate.getDate() + 1))\n                }\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            }\n        });\n    },\n    async addWorkout (userId, data) {\n        return prisma.workout.create({\n            data: {\n                userId,\n                date: new Date(),\n                ...data\n            }\n        });\n    },\n    async getWorkouts (userId, limit = 10) {\n        return prisma.workout.findMany({\n            where: {\n                userId\n            },\n            orderBy: {\n                date: \"desc\"\n            },\n            take: limit\n        });\n    },\n    async addFoodRecognition (userId, data) {\n        return prisma.foodRecognition.create({\n            data: {\n                userId,\n                ...data\n            }\n        });\n    },\n    async getFoodRecognitions (userId, limit = 10) {\n        return prisma.foodRecognition.findMany({\n            where: {\n                userId\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            },\n            take: limit\n        });\n    },\n    async getWeeklyIntakeSummary (userId) {\n        const weekAgo = new Date();\n        weekAgo.setDate(weekAgo.getDate() - 7);\n        return prisma.dailyIntakeHistory.groupBy({\n            by: [\n                \"date\"\n            ],\n            where: {\n                userId,\n                date: {\n                    gte: weekAgo\n                }\n            },\n            _sum: {\n                calories: true,\n                protein: true,\n                carbs: true,\n                fats: true\n            },\n            orderBy: {\n                date: \"asc\"\n            }\n        });\n    },\n    async getMonthlyWorkoutSummary (userId) {\n        const monthAgo = new Date();\n        monthAgo.setMonth(monthAgo.getMonth() - 1);\n        return prisma.workout.findMany({\n            where: {\n                userId,\n                date: {\n                    gte: monthAgo\n                }\n            },\n            orderBy: {\n                date: \"desc\"\n            }\n        });\n    },\n    async addBurnedCalories (userId, data) {\n        const today = new Date();\n        return prisma.dailyBurnedCalories.upsert({\n            where: {\n                userId_date_activity: {\n                    userId,\n                    date: new Date(today.toDateString()),\n                    activity: data.activity\n                }\n            },\n            update: {\n                calories: {\n                    increment: data.calories\n                },\n                duration: data.duration ? {\n                    increment: data.duration\n                } : undefined\n            },\n            create: {\n                userId,\n                date: new Date(today.toDateString()),\n                ...data\n            }\n        });\n    },\n    async getBurnedCalories (userId, date) {\n        const targetDate = date || new Date();\n        return prisma.dailyBurnedCalories.findMany({\n            where: {\n                userId,\n                date: {\n                    gte: new Date(targetDate.toDateString()),\n                    lt: new Date(new Date(targetDate).setDate(targetDate.getDate() + 1))\n                }\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            }\n        });\n    },\n    async getTotalBurnedCalories (userId, date) {\n        const targetDate = date || new Date();\n        const result = await prisma.dailyBurnedCalories.aggregate({\n            where: {\n                userId,\n                date: {\n                    gte: new Date(targetDate.toDateString()),\n                    lt: new Date(new Date(targetDate).setDate(targetDate.getDate() + 1))\n                }\n            },\n            _sum: {\n                calories: true\n            }\n        });\n        return result._sum.calories || 0;\n    },\n    async getDailySummary (userId, date) {\n        const targetDate = date || new Date();\n        return prisma.dailySummary.findUnique({\n            where: {\n                userId_date: {\n                    userId,\n                    date: new Date(targetDate.toDateString())\n                }\n            }\n        });\n    },\n    async updateDailySummary (userId, date) {\n        const targetDate = date || new Date();\n        const dateStr = new Date(targetDate.toDateString());\n        const consumedResult = await prisma.dailyIntakeHistory.aggregate({\n            where: {\n                userId,\n                date: {\n                    gte: dateStr,\n                    lt: new Date(new Date(targetDate).setDate(targetDate.getDate() + 1))\n                }\n            },\n            _sum: {\n                calories: true,\n                protein: true,\n                carbs: true,\n                fats: true\n            }\n        });\n        const burnedResult = await prisma.dailyBurnedCalories.aggregate({\n            where: {\n                userId,\n                date: {\n                    gte: dateStr,\n                    lt: new Date(new Date(targetDate).setDate(targetDate.getDate() + 1))\n                }\n            },\n            _sum: {\n                calories: true\n            }\n        });\n        const totalConsumed = consumedResult._sum.calories || 0;\n        const totalBurned = burnedResult._sum.calories || 0;\n        const netCalories = totalConsumed - totalBurned;\n        return prisma.dailySummary.upsert({\n            where: {\n                userId_date: {\n                    userId,\n                    date: dateStr\n                }\n            },\n            update: {\n                totalConsumed,\n                totalBurned,\n                netCalories,\n                protein: consumedResult._sum.protein || 0,\n                carbs: consumedResult._sum.carbs || 0,\n                fats: consumedResult._sum.fats || 0\n            },\n            create: {\n                userId,\n                date: dateStr,\n                totalConsumed,\n                totalBurned,\n                netCalories,\n                protein: consumedResult._sum.protein || 0,\n                carbs: consumedResult._sum.carbs || 0,\n                fats: consumedResult._sum.fats || 0\n            }\n        });\n    },\n    async getHistoricalData (userId, days = 7) {\n        const startDate = new Date();\n        startDate.setDate(startDate.getDate() - days);\n        return prisma.dailySummary.findMany({\n            where: {\n                userId,\n                date: {\n                    gte: startDate\n                }\n            },\n            orderBy: {\n                date: \"desc\"\n            }\n        });\n    },\n    async resetDailyData (userId, date) {\n        await this.updateDailySummary(userId, date);\n    },\n    async getWeightEntries (profileId) {\n        console.log(\"Fetching weight entries for profileId:\", profileId);\n        const result = await prisma.weightEntry.findMany({\n            where: {\n                profileId\n            },\n            orderBy: {\n                date: \"asc\"\n            }\n        });\n        console.log(\"Found weight entries:\", result.length);\n        return result;\n    },\n    async addWeightEntry (profileId, weight) {\n        console.log(\"Adding weight entry to database:\", {\n            profileId,\n            weight\n        });\n        const result = await prisma.weightEntry.create({\n            data: {\n                profileId,\n                weight,\n                date: new Date()\n            }\n        });\n        console.log(\"Weight entry created:\", result);\n        return result;\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fintake-history%2Froute&page=%2Fapi%2Fintake-history%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintake-history%2Froute.ts&appDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fintake-history%2Froute&page=%2Fapi%2Fintake-history%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintake-history%2Froute.ts&appDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_dorjotgoo_Desktop_Calai_frontend_src_app_api_intake_history_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/intake-history/route.ts */ \"(rsc)/./src/app/api/intake-history/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/intake-history/route\",\n        pathname: \"/api/intake-history\",\n        filename: \"route\",\n        bundlePath: \"app/api/intake-history/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/dorjotgoo/Desktop/Calai/frontend/src/app/api/intake-history/route.ts\",\n    nextConfigOutput,\n    userland: _Users_dorjotgoo_Desktop_Calai_frontend_src_app_api_intake_history_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/intake-history/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fintake-history%2Froute&page=%2Fapi%2Fintake-history%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintake-history%2Froute.ts&appDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/intake-history/route.ts":
/*!*********************************************!*\
  !*** ./src/app/api/intake-history/route.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/dist/esm/index.js\");\n\n\n\n\nconst intakeHistorySchema = zod__WEBPACK_IMPORTED_MODULE_2__.z.object({\n    foodName: zod__WEBPACK_IMPORTED_MODULE_2__.z.string().min(1),\n    calories: zod__WEBPACK_IMPORTED_MODULE_2__.z.number().min(0),\n    protein: zod__WEBPACK_IMPORTED_MODULE_2__.z.number().min(0),\n    carbs: zod__WEBPACK_IMPORTED_MODULE_2__.z.number().min(0),\n    fats: zod__WEBPACK_IMPORTED_MODULE_2__.z.number().min(0),\n    date: zod__WEBPACK_IMPORTED_MODULE_2__.z.string().optional()\n});\nasync function GET(req) {\n    const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.getAuth)(req);\n    if (!userId) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Unauthorized\"\n        }, {\n            status: 401\n        });\n    }\n    try {\n        const { searchParams } = new URL(req.url);\n        const dateParam = searchParams.get(\"date\");\n        const date = dateParam ? new Date(dateParam) : new Date();\n        const intakeHistory = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.db.getIntakeHistory(userId, date);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            intakeHistory\n        });\n    } catch (error) {\n        console.error(\"GET /api/intake-history error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch intake history\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(req) {\n    const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.getAuth)(req);\n    if (!userId) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Unauthorized\"\n        }, {\n            status: 401\n        });\n    }\n    try {\n        const body = await req.json();\n        const validatedData = intakeHistorySchema.parse(body);\n        const intakeRecord = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.db.addIntakeHistory(userId, validatedData);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            intakeRecord\n        });\n    } catch (error) {\n        console.error(\"POST /api/intake-history error:\", error);\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_2__.z.ZodError) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid input data\",\n                details: error.errors\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to add intake record\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9pbnRha2UtaGlzdG9yeS9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBd0Q7QUFDVDtBQUNiO0FBQ1Y7QUFFeEIsTUFBTUksc0JBQXNCRCx5Q0FBUSxDQUFDO0lBQ25DRyxVQUFVSCx5Q0FBUSxHQUFHSyxHQUFHLENBQUM7SUFDekJDLFVBQVVOLHlDQUFRLEdBQUdLLEdBQUcsQ0FBQztJQUN6QkcsU0FBU1IseUNBQVEsR0FBR0ssR0FBRyxDQUFDO0lBQ3hCSSxPQUFPVCx5Q0FBUSxHQUFHSyxHQUFHLENBQUM7SUFDdEJLLE1BQU1WLHlDQUFRLEdBQUdLLEdBQUcsQ0FBQztJQUNyQk0sTUFBTVgseUNBQVEsR0FBR1ksUUFBUTtBQUMzQjtBQUVPLGVBQWVDLElBQUlDLEdBQWdCO0lBQ3hDLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdqQiw2REFBT0EsQ0FBQ2dCO0lBQzNCLElBQUksQ0FBQ0MsUUFBUTtRQUNYLE9BQU9sQixxREFBWUEsQ0FBQ21CLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQWUsR0FBRztZQUFFQyxRQUFRO1FBQUk7SUFDcEU7SUFFQSxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBRyxJQUFJQyxJQUFJTixJQUFJTyxHQUFHO1FBQ3hDLE1BQU1DLFlBQVlILGFBQWFJLEdBQUcsQ0FBQztRQUNuQyxNQUFNWixPQUFPVyxZQUFZLElBQUlFLEtBQUtGLGFBQWEsSUFBSUU7UUFFbkQsTUFBTUMsZ0JBQWdCLE1BQU0xQiwyQ0FBRUEsQ0FBQzJCLGdCQUFnQixDQUFDWCxRQUFRSjtRQUV4RCxPQUFPZCxxREFBWUEsQ0FBQ21CLElBQUksQ0FBQztZQUFFUztRQUFjO0lBQzNDLEVBQUUsT0FBT1IsT0FBTztRQUNkVSxRQUFRVixLQUFLLENBQUMsa0NBQWtDQTtRQUNoRCxPQUFPcEIscURBQVlBLENBQUNtQixJQUFJLENBQ3RCO1lBQUVDLE9BQU87UUFBaUMsR0FDMUM7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFTyxlQUFlVSxLQUFLZCxHQUFnQjtJQUN6QyxNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHakIsNkRBQU9BLENBQUNnQjtJQUMzQixJQUFJLENBQUNDLFFBQVE7UUFDWCxPQUFPbEIscURBQVlBLENBQUNtQixJQUFJLENBQUM7WUFBRUMsT0FBTztRQUFlLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ3BFO0lBRUEsSUFBSTtRQUNGLE1BQU1XLE9BQU8sTUFBTWYsSUFBSUUsSUFBSTtRQUMzQixNQUFNYyxnQkFBZ0I3QixvQkFBb0I4QixLQUFLLENBQUNGO1FBRWhELE1BQU1HLGVBQWUsTUFBTWpDLDJDQUFFQSxDQUFDa0MsZ0JBQWdCLENBQUNsQixRQUFRZTtRQUV2RCxPQUFPakMscURBQVlBLENBQUNtQixJQUFJLENBQUM7WUFBRWdCO1FBQWE7SUFDMUMsRUFBRSxPQUFPZixPQUFPO1FBQ2RVLFFBQVFWLEtBQUssQ0FBQyxtQ0FBbUNBO1FBRWpELElBQUlBLGlCQUFpQmpCLDJDQUFVLEVBQUU7WUFDL0IsT0FBT0gscURBQVlBLENBQUNtQixJQUFJLENBQ3RCO2dCQUFFQyxPQUFPO2dCQUFzQmtCLFNBQVNsQixNQUFNbUIsTUFBTTtZQUFDLEdBQ3JEO2dCQUFFbEIsUUFBUTtZQUFJO1FBRWxCO1FBRUEsT0FBT3JCLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQThCLEdBQ3ZDO1lBQUVDLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvZG9yam90Z29vL0Rlc2t0b3AvQ2FsYWkvZnJvbnRlbmQvc3JjL2FwcC9hcGkvaW50YWtlLWhpc3Rvcnkvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgZ2V0QXV0aCB9IGZyb20gXCJAY2xlcmsvbmV4dGpzL3NlcnZlclwiO1xuaW1wb3J0IHsgZGIgfSBmcm9tIFwiQC9saWIvcHJpc21hXCI7XG5pbXBvcnQgeyB6IH0gZnJvbSBcInpvZFwiO1xuXG5jb25zdCBpbnRha2VIaXN0b3J5U2NoZW1hID0gei5vYmplY3Qoe1xuICBmb29kTmFtZTogei5zdHJpbmcoKS5taW4oMSksXG4gIGNhbG9yaWVzOiB6Lm51bWJlcigpLm1pbigwKSxcbiAgcHJvdGVpbjogei5udW1iZXIoKS5taW4oMCksXG4gIGNhcmJzOiB6Lm51bWJlcigpLm1pbigwKSxcbiAgZmF0czogei5udW1iZXIoKS5taW4oMCksXG4gIGRhdGU6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbn0pO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgeyB1c2VySWQgfSA9IGdldEF1dGgocmVxKTtcbiAgaWYgKCF1c2VySWQpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJVbmF1dGhvcml6ZWRcIiB9LCB7IHN0YXR1czogNDAxIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXEudXJsKTtcbiAgICBjb25zdCBkYXRlUGFyYW0gPSBzZWFyY2hQYXJhbXMuZ2V0KFwiZGF0ZVwiKTtcbiAgICBjb25zdCBkYXRlID0gZGF0ZVBhcmFtID8gbmV3IERhdGUoZGF0ZVBhcmFtKSA6IG5ldyBEYXRlKCk7XG5cbiAgICBjb25zdCBpbnRha2VIaXN0b3J5ID0gYXdhaXQgZGIuZ2V0SW50YWtlSGlzdG9yeSh1c2VySWQsIGRhdGUpO1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgaW50YWtlSGlzdG9yeSB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiR0VUIC9hcGkvaW50YWtlLWhpc3RvcnkgZXJyb3I6XCIsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBcIkZhaWxlZCB0byBmZXRjaCBpbnRha2UgaGlzdG9yeVwiIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgeyB1c2VySWQgfSA9IGdldEF1dGgocmVxKTtcbiAgaWYgKCF1c2VySWQpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJVbmF1dGhvcml6ZWRcIiB9LCB7IHN0YXR1czogNDAxIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgICBjb25zdCB2YWxpZGF0ZWREYXRhID0gaW50YWtlSGlzdG9yeVNjaGVtYS5wYXJzZShib2R5KTtcblxuICAgIGNvbnN0IGludGFrZVJlY29yZCA9IGF3YWl0IGRiLmFkZEludGFrZUhpc3RvcnkodXNlcklkLCB2YWxpZGF0ZWREYXRhKTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGludGFrZVJlY29yZCB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiUE9TVCAvYXBpL2ludGFrZS1oaXN0b3J5IGVycm9yOlwiLCBlcnJvcik7XG4gICAgXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygei5ab2RFcnJvcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiBcIkludmFsaWQgaW5wdXQgZGF0YVwiLCBkZXRhaWxzOiBlcnJvci5lcnJvcnMgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJyb3I6IFwiRmFpbGVkIHRvIGFkZCBpbnRha2UgcmVjb3JkXCIgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRBdXRoIiwiZGIiLCJ6IiwiaW50YWtlSGlzdG9yeVNjaGVtYSIsIm9iamVjdCIsImZvb2ROYW1lIiwic3RyaW5nIiwibWluIiwiY2Fsb3JpZXMiLCJudW1iZXIiLCJwcm90ZWluIiwiY2FyYnMiLCJmYXRzIiwiZGF0ZSIsIm9wdGlvbmFsIiwiR0VUIiwicmVxIiwidXNlcklkIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwiZGF0ZVBhcmFtIiwiZ2V0IiwiRGF0ZSIsImludGFrZUhpc3RvcnkiLCJnZXRJbnRha2VIaXN0b3J5IiwiY29uc29sZSIsIlBPU1QiLCJib2R5IiwidmFsaWRhdGVkRGF0YSIsInBhcnNlIiwiaW50YWtlUmVjb3JkIiwiYWRkSW50YWtlSGlzdG9yeSIsIlpvZEVycm9yIiwiZGV0YWlscyIsImVycm9ycyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/intake-history/route.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/cookie","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fintake-history%2Froute&page=%2Fapi%2Fintake-history%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fintake-history%2Froute.ts&appDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdorjotgoo%2FDesktop%2FCalai%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();